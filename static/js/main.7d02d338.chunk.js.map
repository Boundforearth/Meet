{"version":3,"sources":["Event.js","EventList.js","CitySearch.js","NumberOfEvents.js","mock-data.js","api.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Event","state","toggleDetails","handleClick","setState","event","this","props","details","buttonText","className","summary","start","dateTime","timeZone","location","description","onClick","Component","EventList","events","map","id","CitySearch","query","suggestions","showSuggestions","undefined","handleInputChanged","value","target","locations","filter","toUpperCase","indexOf","handleItemClicked","suggestion","updateEvents","type","onChange","onFocus","style","display","NumberOfEvents","displayCount","handleInputChange","mockData","kind","etag","status","htmlLink","created","updated","creator","email","self","organizer","end","recurringEventId","originalStartTime","iCalUID","sequence","reminders","useDefault","eventType","getAccessToken","a","accessToken","localStorage","getItem","checkToken","tokenCheck","error","removeItem","searchParams","URLSearchParams","window","search","get","code","axios","results","authUrl","data","href","getToken","extractLocations","console","log","Set","fetch","then","res","json","catch","result","removeQuery","history","pushState","pathname","newurl","protocol","host","encodeCode","encodeURIComponent","access_token","setItem","getEvents","NProgress","startsWith","done","token","url","JSON","stringify","App","locationEvents","mounted","Boolean","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"sRAkDeA,E,4MA5CbC,MAAQ,CACNC,eAAe,G,EAGjBC,YAAc,YACoB,IAA7B,EAAKF,MAAMC,cACZ,EAAKE,SAAS,CACZF,eAAe,IAIjB,EAAKE,SAAS,CACZF,eAAe,K,4CAKrB,WAAU,IAAD,OACAG,EAASC,KAAKC,MAAdF,MACAH,EAAiBI,KAAKL,MAAtBC,cACDM,EAAUN,EAAgB,YAAc,SACxCO,EAAaP,EAAgB,eAAiB,eACpD,OACE,sBAAKQ,UAAU,QAAf,UACE,oBAAIA,UAAU,UAAd,SAAyBL,EAAMM,UAC/B,mBAAGD,UAAU,aAAb,SAA2BL,EAAMO,MAAMC,WACvC,sBAAMH,UAAU,YAAhB,SAA6BL,EAAMO,MAAME,WACzC,oBAAGJ,UAAU,WAAb,cAA0BL,EAAMM,QAAhC,MAA4CN,EAAMU,YAClD,sBACEL,UAAWF,EADb,UAGE,8CACA,gEACA,mBAAGE,UAAU,cAAb,SAA4BL,EAAMW,iBAEpC,wBACEN,UAAU,MACVO,QAAS,kBAAM,EAAKd,eAFtB,SAGEM,W,GAvCUS,aCeLC,E,4JAdb,WACE,IAAQC,EAAWd,KAAKC,MAAhBa,OACR,OACE,oBAAIV,UAAU,YAAd,SACGU,EAAOC,KAAI,SAAAhB,GAAK,OACf,6BACE,cAAC,EAAD,CAAOA,MAAOA,KADPA,EAAMiB,a,GANDJ,aCuDTK,E,4MAvDbtB,MAAQ,CACNuB,MAAO,GACPC,YAAa,GACbC,qBAAiBC,G,EAGnBC,mBAAqB,SAACvB,GACpB,IAAMwB,EAAQxB,EAAMyB,OAAOD,MACrBJ,EAAc,EAAKlB,MAAMwB,UAAUC,QAAO,SAACjB,GAC/C,OAAOA,EAASkB,cAAcC,QAAQL,EAAMI,gBAAkB,KAEhE,EAAK7B,SAAS,CACZoB,MAAOK,EACPJ,iB,EAIJU,kBAAoB,SAACC,GACnB,EAAKhC,SAAS,CACZoB,MAAOY,EACPV,iBAAiB,IAGnB,EAAKnB,MAAM8B,aAAaD,I,4CAG1B,WAAU,IAAD,OACP,OACE,sBAAK1B,UAAU,aAAf,UACE,uBACE4B,KAAK,OACL5B,UAAU,OACVmB,MAAOvB,KAAKL,MAAMuB,MAClBe,SAAUjC,KAAKsB,mBACfY,QAAS,WAAQ,EAAKpC,SAAS,CAAEsB,iBAAiB,OAEpD,qBAAIhB,UAAU,cAAc+B,MAAOnC,KAAKL,MAAMyB,gBAAkB,GAAI,CAACgB,QAAS,QAA9E,UACGpC,KAAKL,MAAMwB,YAAYJ,KAAI,SAACe,GAAD,OAC1B,oBAEEnB,QAAS,kBAAM,EAAKkB,kBAAkBC,IAFxC,SAGEA,GAFKA,MAIT,oBAEEnB,QAAS,kBAAM,EAAKkB,kBAAkB,QAFxC,SAIE,gDAHI,iB,GA7CSjB,aCyBVyB,E,4MAzBb1C,MAAQ,CACN2C,aAAc,I,EAGhBC,kBAAoB,SAACxC,GACnB,IAAIwB,EAAQxB,EAAMyB,OAAOD,MACzB,EAAKzB,SAAS,CACZwC,aAAcf,K,4CAIlB,WACE,OACE,8BACE,uBACES,KAAK,SACL5B,UAAU,SACVmB,MAAOvB,KAAKL,MAAM2C,aAClBL,SAAUjC,KAAKuC,0B,GAnBI3B,a,+BCHvB4B,EAAW,CACf,CACEC,KAAK,iBACLC,KAAK,qBACL1B,GAAG,8CACH2B,OAAO,YACPC,SAAS,oJACTC,QAAQ,2BACRC,QAAQ,2BACRzC,QAAQ,mBACRK,YAAY,uWACZD,SAAS,aACTsC,QACE,CACEC,MAAM,oCACNC,MAAK,GAETC,UACE,CACEF,MAAM,oCACNC,MAAK,GAET3C,MACE,CACEC,SAAS,4BACTC,SAAS,iBAEb2C,IACE,CACC5C,SAAS,4BACTC,SAAS,iBAEZ4C,iBAAiB,6BACjBC,kBACE,CACE9C,SAAS,4BACTC,SAAS,iBAEb8C,QAAQ,wCACRC,SAAS,EACTC,UAAU,CAACC,YAAW,GACtBC,UAAU,WACZ,CACEjB,KAAK,iBACLC,KAAK,qBACL1B,GAAG,8CACH2B,OAAO,YACPC,SAAS,oJACTC,QAAQ,2BACRC,QAAQ,2BACRzC,QAAQ,eACRK,YAAY,mSACZD,SAAS,kBACTsC,QACE,CACEC,MAAM,oCACNC,MAAK,GAETC,UACE,CACEF,MAAM,oCACNC,MAAK,GAET3C,MACE,CACEC,SAAS,4BACTC,SAAS,iBAEb2C,IACE,CACE5C,SAAS,4BACTC,SAAS,iBAEb4C,iBAAiB,6BACjBC,kBACE,CACE9C,SAAS,4BACTC,SAAS,iBAEb8C,QAAQ,wCACRC,SAAS,EACTC,UAAU,CAACC,YAAW,GACtBC,UAAU,Y,iCCxEDC,EAAc,uCAAG,sCAAAC,EAAA,yDACtBC,EAAcC,aAAaC,QAAQ,gBADb,KAETF,GAFS,qCAEaG,EAAWH,GAFxB,6BAEtBI,EAFsB,KAIvBJ,IAAeI,EAAWC,MAJH,kCAKpBJ,aAAaK,WAAW,gBALJ,eAMpBC,EAAe,IAAIC,gBAAgBC,OAAO7D,SAAS8D,QAN/B,UAOPH,EAAaI,IAAI,QAPV,WAOpBC,EAPoB,yCASFC,IAAMF,IAC1B,+EAVsB,eASlBG,EATkB,OAYhBC,EAAYD,EAAQE,KAApBD,QAZgB,kBAahBN,OAAO7D,SAASqE,KAAOF,GAbP,iCAenBH,GAAQM,EAASN,IAfE,iCAiBrBZ,GAjBqB,4CAAH,qDAoBdmB,EAAmB,SAAClE,GAC/BmE,QAAQC,IAAIpE,GACZ,IAAIkE,EAAmBlE,EAAOC,KAAI,SAAChB,GAAD,OAAWA,EAAMU,YAEnD,OADa,YAAO,IAAI0E,IAAIH,KAIxBhB,EAAU,uCAAG,WAAOH,GAAP,eAAAD,EAAA,sEACIwB,MAAM,+DAAD,OACuCvB,IAE9DwB,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBC,OAAM,SAACtB,GAAD,OAAWA,EAAMqB,UALT,cACXE,EADW,yBAOVA,GAPU,2CAAH,sDAUVC,EAAc,WAClB,GAAIpB,OAAOqB,QAAQC,WAAatB,OAAO7D,SAASoF,SAAU,CACxD,IAAIC,EACFxB,OAAO7D,SAASsF,SAChB,KACAzB,OAAO7D,SAASuF,KAChB1B,OAAO7D,SAASoF,SAClBvB,OAAOqB,QAAQC,UAAU,GAAI,GAAIE,QAEjCA,EAASxB,OAAO7D,SAASsF,SAAW,KAAOzB,OAAO7D,SAASuF,KAC3D1B,OAAOqB,QAAQC,UAAU,GAAI,GAAIE,IAI/Bf,EAAQ,uCAAG,WAAON,GAAP,mBAAAb,EAAA,6DACTqC,EAAaC,mBAAmBzB,GADvB,SAEgBW,MAC7B,wEAA0Ea,GAEzEZ,MAAK,SAACC,GACL,OAAOA,EAAIC,UAEZC,OAAM,SAACtB,GAAD,OAAWA,KARL,wBAEPiC,EAFO,EAEPA,eAQQrC,aAAasC,QAAQ,eAAgBD,GAVtC,kBAYRA,GAZQ,2CAAH,sDAeDE,EAAS,uCAAG,kCAAAzC,EAAA,yDACvB0C,IAAUhG,SAENgE,OAAO7D,SAASqE,KAAKyB,WAAW,oBAHb,uBAIrBD,IAAUE,OAJW,kBAKdhE,GALc,uBAQHmB,IARG,YAQjB8C,EARiB,gCAWrBf,IACMgB,EAAM,4EAA8ED,EAZrE,UAaA/B,IAAMF,IAAIkC,GAbV,eAafjB,EAbe,QAcXZ,OACJpD,EAAYuD,EAAiBS,EAAOZ,KAAK/D,QAC7CgD,aAAasC,QAAQ,aAAcO,KAAKC,UAAUnB,EAAOZ,OACzDf,aAAasC,QAAQ,YAAaO,KAAKC,UAAUnF,KAEnD6E,IAAUE,OAnBW,kBAoBdf,EAAOZ,KAAK/D,QApBE,4CAAH,qDCxBP+F,G,kNA3CblH,MAAQ,CACNmB,OAAQ,GACRW,UAAW,I,EAmBbM,aAAe,SAACtB,GACd4F,IAAYhB,MAAK,SAACvE,GAChB,IAAMgG,EAA+B,QAAbrG,EACtBK,EACAA,EAAOY,QAAO,SAAC3B,GAAD,OAAWA,EAAMU,WAAaA,KAC9C,EAAKX,SAAS,CACZgB,OAAQgG,Q,uDAtBd,WAAqB,IAAD,OAClB9G,KAAK+G,SAAU,EACfV,IAAYhB,MAAK,SAACvE,GACb,EAAKiG,SACN,EAAKjH,SAAS,CACZgB,SACAW,UAAWuD,EAAiBlE,U,kCAMpC,WACEd,KAAK+G,SAAU,I,oBAcjB,WACE,OACE,sBAAK3G,UAAU,MAAf,UACE,cAAC,EAAD,CAAYqB,UAAWzB,KAAKL,MAAM8B,UAAWM,aAAc/B,KAAK+B,eAChE,cAAC,EAAD,IACA,cAAC,EAAD,CAAWjB,OAAQd,KAAKL,MAAMmB,gB,GAtCpBF,cCIEoG,QACW,cAA7B1C,OAAO7D,SAASwG,UAEe,UAA7B3C,OAAO7D,SAASwG,UAEhB3C,OAAO7D,SAASwG,SAASC,MAAM,2DCjBnC,IAYeC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBhC,MAAK,YAAkD,IAA/CiC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SFoHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB7C,MAAK,SAAC8C,GACLA,EAAaC,gBAEd5C,OAAM,SAACtB,GACNe,QAAQf,MAAMA,EAAMmE,YE/G5BlB,M","file":"static/js/main.7d02d338.chunk.js","sourcesContent":["//src/Event.js\n\nimport React, { Component } from \"react\";\nimport \"./Event.css\"\n\nclass Event extends Component {\n  state = {\n    toggleDetails: false,\n  }\n\n  handleClick = () => {\n    if(this.state.toggleDetails === false) {\n      this.setState({\n        toggleDetails: true,\n      })   \n    }\n    else{\n      this.setState({\n        toggleDetails: false,\n      })\n    }\n  }\n\n  render() {\n    const {event} = this.props;\n    const {toggleDetails} = this.state\n    const details = toggleDetails ? \"displayed\" : \"hidden\";\n    const buttonText = toggleDetails ? \"Hide Details\" : \"Show Details\";\n    return (\n      <div className=\"Event\">\n        <h4 className=\"summary\">{event.summary}</h4>\n        <p className=\"start-time\">{event.start.dateTime}</p>\n        <span className=\"time-zone\">{event.start.timeZone}</span>\n        <p className=\"location\">@{event.summary} | {event.location}</p>\n        <div \n          className={details}\n        >\n          <h5>About Event:</h5>\n          <h6>See Details on Google Calendar</h6>\n          <p className=\"description\">{event.description}</p>\n        </div>\n        <button \n          className=\"btn\"\n          onClick={() => this.handleClick()}\n        >{buttonText}</button>\n      </div>\n    )\n  }\n}\n\nexport default Event;","//src/EventList.js\n\nimport React, { Component } from \"react\";\nimport Event from \"./Event\"\n\nclass EventList extends Component {\n  render() {\n    const { events } = this.props;\n    return (\n      <ul className=\"EventList\">\n        {events.map(event => \n          <li key={event.id}>\n            <Event event={event} />\n          </li>\n          )}\n      </ul>\n    );\n  }\n}\n\nexport default EventList;","// src/CitySearch.js\n\nimport React, { Component } from \"react\";\n\nclass CitySearch extends Component {\n  state = {\n    query: \"\",\n    suggestions: [],\n    showSuggestions: undefined,\n  }\n\n  handleInputChanged = (event) => {\n    const value = event.target.value;\n    const suggestions = this.props.locations.filter((location) => {\n      return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\n    });\n    this.setState({ \n      query: value,\n      suggestions,    \n    });\n  }\n\n  handleItemClicked = (suggestion) => {\n    this.setState({\n      query: suggestion,\n      showSuggestions: false,\n    });\n\n    this.props.updateEvents(suggestion);\n  }\n\n  render() {\n    return (\n      <div className=\"CitySearch\">\n        <input\n          type=\"text\"\n          className=\"city\"\n          value={this.state.query}\n          onChange={this.handleInputChanged}\n          onFocus={() => { this.setState({ showSuggestions: true }) }}\n        />\n        <ul className=\"suggestions\" style={this.state.showSuggestions ? {}: {display: \"none\"}}>\n          {this.state.suggestions.map((suggestion) => (\n            <li\n              key={suggestion}\n              onClick={() => this.handleItemClicked(suggestion)}\n            >{suggestion}</li>\n          ))}\n          <li \n            key=\"all\"\n            onClick={() => this.handleItemClicked(\"all\")}\n            >\n            <b>See all cities</b>\n          </li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default CitySearch;","// src/NumberOfEvents.js\nimport React, {Component} from \"react\";\n\nclass NumberOfEvents extends Component {\n  state = {\n    displayCount: 32\n  }\n\n  handleInputChange = (event) => {\n    let value = event.target.value\n    this.setState({\n      displayCount: value\n    })\n  }\n\n  render() {\n    return(\n      <div>\n        <input \n          type=\"number\"\n          className=\"number\"\n          value={this.state.displayCount}\n          onChange={this.handleInputChange}\n         />\n      </div>\n    )\n  }\n}\n\nexport default NumberOfEvents;","const mockData = [\n  {\n    kind:\"calendar#event\",\n    etag:\"\\\"3181161784712000\\\"\",\n    id:\"4eahs9ghkhrvkld72hogu9ph3e_20200519T140000Z\",\n    status:\"confirmed\",\n    htmlLink:\"https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MTlUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\n    created:\"2020-05-19T19:17:46.000Z\",\n    updated:\"2020-05-27T12:01:32.356Z\",\n    summary:\"Learn JavaScript\",\n    description:\"Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.\",\n    location:\"London, UK\",\n    creator:\n      {\n        email:\"fullstackwebdev@careerfoundry.com\",\n        self:true\n      },\n    organizer:\n      {\n        email:\"fullstackwebdev@careerfoundry.com\",\n        self:true\n      },\n    start:\n      {\n        dateTime:\"2020-05-19T16:00:00+02:00\",\n        timeZone:\"Europe/Berlin\"\n      },\n    end:\n      {\n       dateTime:\"2020-05-19T17:00:00+02:00\",\n       timeZone:\"Europe/Berlin\"\n      },\n    recurringEventId:\"4eahs9ghkhrvkld72hogu9ph3e\",\n    originalStartTime:\n      {\n        dateTime:\"2020-05-19T16:00:00+02:00\",\n        timeZone:\"Europe/Berlin\"\n      },\n    iCalUID:\"4eahs9ghkhrvkld72hogu9ph3e@google.com\",\n    sequence:0,\n    reminders:{useDefault:true},\n    eventType:\"default\"},\n  {\n    kind:\"calendar#event\",\n    etag:\"\\\"3181159875584000\\\"\",\n    id:\"3qtd6uscq4tsi6gc7nmmtpqlct_20200520T120000Z\",\n    status:\"confirmed\",\n    htmlLink:\"https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjBUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\n    created:\"2020-05-19T19:14:30.000Z\",\n    updated:\"2020-05-27T11:45:37.792Z\",\n    summary:\"React is Fun\",\n    description:\"Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. \",\n    location:\"Berlin, Germany\",\n    creator:\n      {\n        email:\"fullstackwebdev@careerfoundry.com\",\n        self:true\n      },\n    organizer:\n      {\n        email:\"fullstackwebdev@careerfoundry.com\",\n        self:true\n      },\n    start:\n      {\n        dateTime:\"2020-05-20T14:00:00+02:00\",\n        timeZone:\"Europe/Berlin\"\n      },\n    end:\n      {\n        dateTime:\"2020-05-20T15:00:00+02:00\",\n        timeZone:\"Europe/Berlin\"\n      },\n    recurringEventId:\"3qtd6uscq4tsi6gc7nmmtpqlct\",\n    originalStartTime:\n      {\n        dateTime:\"2020-05-20T14:00:00+02:00\",\n        timeZone:\"Europe/Berlin\"\n      },\n    iCalUID:\"3qtd6uscq4tsi6gc7nmmtpqlct@google.com\",\n    sequence:0,\n    reminders:{useDefault:true},\n    eventType:\"default\"}]\n\nexport { mockData }","/**\n * @param {*} events:\n * This function takes an events array, then uses map to create a new array with only locations.\n * It will also remove all duplicates by creating another new array using the spread operator and spreading a Set\n * The Set will remove all duplicates from the array.\n */\nimport { mockData } from \"./mock-data\";\nimport axios from \"axios\";\nimport NProgress from \"nprogress\";\n\nexport const getAccessToken = async () => {\n  const accessToken = localStorage.getItem(\"access_token\");\n  const tokenCheck = accessToken && (await checkToken(accessToken));\n\n  if (!accessToken || tokenCheck.error) {\n    await localStorage.removeItem(\"access_token\");\n    const searchParams = new URLSearchParams(window.location.search);\n    const code = await searchParams.get(\"code\");\n    if(!code) {\n      const results = await axios.get(\n        \"https://dycgmo7l10.execute-api.us-east-1.amazonaws.com/dev/api/get-auth-url\"\n      );\n      const { authUrl } = results.data;\n      return (window.location.href = authUrl);\n    }\n    return code && getToken(code);\n  }\n  return accessToken;\n}\n\nexport const extractLocations = (events) => {\n  console.log(events);\n  var extractLocations = events.map((event) => event.location);\n  var locations = [...new Set(extractLocations)];\n  return locations;\n}\n\nconst checkToken = async (accessToken) => {\n  const result = await fetch(\n    `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\n  )\n    .then((res) => res.json())\n    .catch((error) => error.json());\n  \n  return result;\n}\n\nconst removeQuery = () => {\n  if (window.history.pushState && window.location.pathname) {\n    var newurl = \n      window.location.protocol +\n      \"//\" +\n      window.location.host +\n      window.location.pathname;\n    window.history.pushState(\"\", \"\", newurl);\n  }  else {\n    newurl = window.location.protocol + \"//\" + window.location.host;\n    window.history.pushState(\"\", \"\", newurl);\n  }\n}\n\nconst getToken = async (code) => {\n  const encodeCode = encodeURIComponent(code);\n  const { access_token } = await fetch(\n    \"https://dycgmo7l10.execute-api.us-east-1.amazonaws.com/dev/api/token/\" + encodeCode\n  )\n    .then((res) => {\n      return res.json();\n    })\n    .catch((error) => error);\n  \n  access_token && localStorage.setItem(\"access_token\", access_token);\n\n  return access_token;\n};\n\nexport const getEvents = async () => {\n  NProgress.start();\n\n  if (window.location.href.startsWith(\"http://localhost\")) {\n    NProgress.done();\n    return mockData;\n  }\n\n  const token = await getAccessToken();\n\n  if (token) {\n    removeQuery();\n    const url = \"https://dycgmo7l10.execute-api.us-east-1.amazonaws.com/dev/api/getevents/\" + token;\n    const result = await axios.get(url);\n    if(result.data) {\n      var locations = extractLocations(result.data.events);\n      localStorage.setItem(\"lastEvents\", JSON.stringify(result.data));\n      localStorage.setItem(\"locations\", JSON.stringify(locations));\n    }\n    NProgress.done();\n    return result.data.events;\n  }\n};","import React, { Component }from 'react';\nimport './App.css';\nimport EventList from \"./EventList\";\nimport CitySearch from \"./CitySearch\"\nimport NumberOfEvents from './NumberOfEvents';\nimport { extractLocations, getEvents } from './api';\nimport \"./nprogress.css\";\n\nclass App extends Component {\n  state = {\n    events: [],\n    locations: [],\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n    getEvents().then((events) => {\n      if(this.mounted){\n        this.setState({\n          events, \n          locations: extractLocations(events)\n        });\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  updateEvents = (location) => {\n    getEvents().then((events) => {\n      const locationEvents = (location === \"all\") ?\n        events :\n        events.filter((event) => event.location === location);\n      this.setState({\n        events: locationEvents\n      });\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <CitySearch locations={this.state.locations} updateEvents={this.updateEvents} />\n        <NumberOfEvents />\n        <EventList events={this.state.events} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}